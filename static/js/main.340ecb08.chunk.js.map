{"version":3,"sources":["components/Navbar.js","components/cards.js","App.js","index.js"],"names":["Navbars","props","react_default","a","createElement","Navbar_default","bg","variant","expand","sticky","style","color","Col_default","message","md","score","Cards","className","CardColumns_default","padding","flags","map","item","Card_default","key","id","onClick","handleClick","width","border","background","Img","src","image","alt","height","marginLeft","App","state","clicked","clickedArr","reset","_this","setState","console","log","includes","shuffle","push","this","newArr","sort","Math","random","backgroundImage","components_Navbar","Container_default","fluid","textAlign","marginTop","cards","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"26BAwBeA,MAlBf,SAAiBC,GACb,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,OAAO,MAAMC,MAAO,CAACC,MAAO,UAEjET,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAAA,oCAEJF,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAAA,UAAKH,EAAMY,UAEfX,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAKW,GAAG,QACJZ,EAAAC,EAAAC,cAAA,oBAAYH,EAAMc,MAAlB,6CCILC,MAdf,SAAef,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACPf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAaO,MAAO,CAACS,QAAS,kBACzBlB,EAAMmB,MAAMC,IAAI,SAAAC,GAAI,OACjBpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAMqB,IAAKF,EAAKG,GAAIC,QAAS,kBAAMzB,EAAM0B,YAAYL,EAAKG,KAAKf,MAAO,CAAEkB,MAAO,OAAQC,OAAO,OAAQC,WAAY,eAAgBb,UAAU,OACxIf,EAAAC,EAAAC,cAACmB,EAAApB,EAAK4B,IAAN,CAAUC,IAAKV,EAAKW,MAAOC,IAAI,OAAOxB,MAAO,CAAEyB,OAAQ,SAAUP,MAAM,MAAOQ,WAAY,wCCoEvGC,6MA1EXC,MAAQ,CACJlB,QACAL,MAAO,EACPwB,SAAS,EACT1B,QAAS,qBACT2B,WAAY,MAmBhBC,MAAQ,WACJC,EAAKC,SAAS,CACV5B,MAAO,EACPwB,SAAS,EACT1B,QAAS,wCACT2B,WAAY,QAMpBb,YAAc,SAAAF,GACVmB,QAAQC,IAAIpB,GAEZmB,QAAQC,IAAIH,EAAKJ,MAAME,YACnBE,EAAKJ,MAAME,WAAWM,SAASrB,IAC/BiB,EAAKD,QACLC,EAAKK,YAGLL,EAAKJ,MAAME,WAAWQ,KAAKvB,GAC3BiB,EAAKC,SAAS,CAAE5B,MAAO2B,EAAKJ,MAAMvB,MAAQ,IAC1C2B,EAAKK,UACLL,EAAKC,SAAS,CAAE9B,QAAS,iGArC7BoC,KAAKF,4CAOL,IAAIG,EAASD,KAAKX,MAAMlB,MAAM+B,KAAK,WAAc,MAAO,GAAMC,KAAKC,WACnEJ,KAAKN,SAAS,CACVvB,MAAO8B,qCAsCX,OACIhD,EAAAC,EAAAC,cAAA,OAAKa,UAAU,uBAAuBP,MAAO,CAAC4C,gBAAe,yCACzDpD,EAAAC,EAAAC,cAACmD,EAAD,CAASxC,MAAOkC,KAAKX,MAAMvB,MAAOF,QAASoC,KAAKX,MAAMzB,UACtDX,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,CAAWsD,OAAK,EAAC/C,MAAO,CAACyB,OAAQ,OAAQL,WAAY,SACjD5B,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACgD,UAAW,SAAU/C,MAAO,QAASgD,UAAW,UACzDzD,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,0FAIRF,EAAAC,EAAAC,cAACwD,EAAD,CAAOxC,MAAO6B,KAAKX,MAAMlB,MAAOO,YAAasB,KAAKtB,sBApEhDkC,aCFlBC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.340ecb08.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport NavbarMessage from './NavbarMessage';\r\n\r\nfunction Navbars(props) {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky='top' style={{color: 'white'}}>\r\n            \r\n                <Col>\r\n                    <h3>Click-olas Cage Game!</h3>\r\n                </Col>\r\n                <Col >\r\n                    <h4>{props.message}</h4>\r\n                </Col>\r\n                <Col md='auto'>\r\n                    <h4>Score: {props.score}/12 </h4>\r\n                </Col>\r\n            \r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navbars;","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nfunction Cards(props) {\r\n    return (\r\n        <div className=\"container\">\r\n                <CardColumns style={{padding: '0 45px 0 45px'}}>\r\n                    {props.flags.map(item => (\r\n                        <Card key={item.id} onClick={() => props.handleClick(item.id)} style={{ width: \"100%\", border:'none', background: 'transparent'}} className=\"p-0\">\r\n                            <Card.Img src={item.image} alt='flag' style={{ height: \"20.5vh\", width:'70%', marginLeft: '16%' }}/>\r\n                        </Card>\r\n                    ))}\r\n                </CardColumns>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n/* <div className=\"card\" key={item.id} onClick={() => props.handleClick(item.id)}>\r\n<img src={item.image} alt=\"something\" className=\"card-img-top\" />\r\n</div> */","import React, { Component } from \"react\";\r\nimport Navbars from \"./components/Navbar\";\r\nimport Cards from \"./components/cards\";\r\nimport flags from \"./images.json\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nclass App extends Component {\r\n    state = {\r\n        flags,\r\n        score: 0,\r\n        clicked: false,\r\n        message: \"Click Any To Start\",\r\n        clickedArr: []\r\n    };\r\n\r\n    // on component did mount shuffle array\r\n    componentDidMount() {\r\n        this.shuffle();\r\n    };\r\n\r\n    // shuffle flags\r\n    shuffle() {\r\n        // .sort uses MergeSort alg.\r\n        //  O(n log n) with O(n) for memory\r\n        let newArr = this.state.flags.sort(function () { return 0.5 - Math.random() });\r\n        this.setState({\r\n            flags: newArr\r\n        })\r\n    };\r\n\r\n    //  reset the game\r\n    reset = () => {\r\n        this.setState({\r\n            score: 0,\r\n            clicked: false,\r\n            message: 'You Clicked the same Cage. Try Again!',\r\n            clickedArr: []\r\n        })\r\n    };\r\n\r\n    // create a function that will be triggered on click on a card pass the function into the Cards component\r\n    // the function should accept a single value of the card id \r\n    handleClick = id => {\r\n        console.log(id)\r\n        // this.state.clickedArr.push(id);\r\n        console.log(this.state.clickedArr);\r\n        if (this.state.clickedArr.includes(id)) {\r\n            this.reset();\r\n            this.shuffle();\r\n        }\r\n        else {\r\n            this.state.clickedArr.push(id)\r\n            this.setState({ score: this.state.score + 1})\r\n            this.shuffle();\r\n            this.setState({ message: 'Correct' })\r\n        }\r\n        // check if clicked item \"clicked key\" is false\r\n        // set clicked item clicked to true \r\n        // user clicked correct - create a function to handle correct clicks\r\n        // if \"clicked key\" is true already user clicked incorrect - create a function to handle incorrect clicks\r\n    };\r\n\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"container-fluid px-0\" style={{backgroundImage: `url(assets/images/footer_lodyas.png)`}}>\r\n                <Navbars score={this.state.score} message={this.state.message} />\r\n                <Container fluid style={{height: \"40vh\", background: 'none'}}>\r\n                    <div style={{textAlign: 'center', color: 'white', marginTop: '150px'}}>\r\n                        <h1>Click-olas Cage Game!</h1>\r\n                        <h3>Click on an image to gain points, but don't click an image more than once.</h3>\r\n                    </div>\r\n                    \r\n                </Container>\r\n                <Cards flags={this.state.flags} handleClick={this.handleClick} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}